package com.malwarebytes.kafka.deserializer;

import com.fasterxml.jackson.databind.ObjectMapper;
import org.apache.kafka.common.serialization.Deserializer;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.util.Map;

public class KafkaJsonDeserializer<T> implements Deserializer<T> {
    private static final Logger LOGGER = LoggerFactory.getLogger(KafkaJsonDeserializer.class);
    private Class<T> tClass;
    public static final String CONFIG_KEY_CLASS = "value.deserializer.class";

    public KafkaJsonDeserializer() {
    }

    @Override
    public void configure(Map map, boolean b) {
        String className = String.valueOf(map.get(CONFIG_KEY_CLASS));
        try{
            tClass = (Class<T>)Class.forName(className);
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        }
    }

    @Override
    public T deserialize(String s, byte[] bytes) {
        ObjectMapper mapper = new ObjectMapper();
        T obj = null;
        try {
            obj = mapper.readValue(bytes, tClass);
        } catch (Exception e) {
            LOGGER.error(e.getMessage());
        }
        return obj;
    }

    @Override
    public void close() {

    }
}
